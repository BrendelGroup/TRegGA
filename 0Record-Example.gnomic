#!/bin/sh
set -eo pipefail

TRegGA_DIR=$(pwd)
source ${TRegGA_DIR}/TRegGA.source

##-------------------------
## TRegGA-INSTALL contains general installation instructions for the programs used by TRegGA.
# TRegGA.config contains TRegGA runtime configuration for program locations that needs to be included into makefiles. 
# TRegGA.config.gnomic is specific to gnomic.soic.indiana.edu, and should replace TRegGA.config before TRegGA execution.
# TRegGA.source contains TRegGA runtime configuration for program locations that needs to be included into shell environment. 
# TRegGA.source.gnomic is specific to gnomic.soic.indiana.edu, and should replace TRegGA.source before TRegGA execution.

##---------------------------
## Example for executing job on gnomic.soic.indiana.edu
# Assembly of the SWEET13 locus using Zhengshan97 reads against the rice Japonica Nipponbare reference genome.
# Source: http://plants.ensembl.org/Oryza_sativa/Gene/Summary?g=OS12G0476200;r=12:17302127-17305326;t=OS12T0476200-01
# SWEET13 description: Bidirectional sugar transporter [Source:UniProtKB/Swiss-Prot;Acc:Q2QR07]
# SWEET13 (Xa25/xa25, Os12N3) gene ID in Oryza sativa Japonica: OS12G0476200.
# SWEET13 coding exons: 6. Transcript length: 1,653bp. Protein residues: 296aa.
# Oryza sativa Japonica chromosome 12: 17,302,127-17,305,326 reverse strand.
# We recommed adding 10 Kb to the borders of the interested region as the final target to increase the specificity of the reference-guided assembly.
# We use chr12:17,292,001-17,315,000 as the target region for the following TRegGA example.

##---------------------------
TRegGA_DIR=$(pwd)
source ./TRegGA.source
CHECKONLY=no
NUMPROC=4
CULTIVAR='\"Zhengshan97\"'
SYNONYM="ZHENGSHAN97"
TARGET=OsjSWEET13
REFERENCE=OsjCHR12
FROM=17292001
TO=17315000

##--------------------------
echo "
#!/bin/sh
set -eo pipefail

TRegGA_DIR=${TRegGA_DIR}
source ${TRegGA_DIR}/TRegGA.source
source ${SRCDIR}/PAGIT/PAGIT/sourceme.pagit
cd ${TRegGA_DIR}

# For the read prep and no more.
# make CHECKONLY=${CHECKONLY} NUMPROC=${NUMPROC} CULTIVAR='${CULTIVAR}' SYNONYM=${SYNONYM} -f Makefile_TRegGA-orig ${TRegGA_DIR}/reads/${SYNONYM}/${SYNONYM}_1.fa >& err_${SYNONYM}-reads
# For the read prep and denovo assembly and no more.
# make CHECKONLY=${CHECKONLY} NUMPROC=${NUMPROC} CULTIVAR='${CULTIVAR}' SYNONYM=${SYNONYM} -f Makefile_TRegGA-orig ${TRegGA_DIR}/assembly/denovo/${SYNONYM}/${SYNONYM}-GF/${SYNONYM}-GF.gapfilled.final.fa >& err_${SYNONYM}-denovo
# For the target prep only
# make CHECKONLY=${CHECKONLY} NUMPROC=${NUMPROC} CULTIVAR='${CULTIVAR}' SYNONYM=${SYNONYM} TARGET=${TARGET} REFERENCE=${REFERENCE} FROM=${FROM} TO=${TO} -f Makefile_TRegGA-orig ${TRegGA_DIR}/targets/${TARGET}.embl >& err_${SYNONYM}-TargetPrep-${TARGET}
# For the entire workflow
make CHECKONLY=${CHECKONLY} NUMPROC=${NUMPROC} CULTIVAR='${CULTIVAR}' SYNONYM=${SYNONYM} TARGET=${TARGET} REFERENCE=${REFERENCE} FROM=${FROM} TO=${TO} -f Makefile_TRegGA-orig >& err_${SYNONYM}-on-${TARGET}

##---------------------------
# Traverse to ${TRegGA_DIR}/assembly/rfguided/${SYNONYM}-on-${TARGET}/EVALUATION for the assembly results.
# The assembly results can be visually evaluated against the target using the Artemis Comparson Tool (ACT):
# ${SRCDIR}/PAGIT/PAGIT/bin/act ${TARGET}.embl blastn.out ${SYNONYM}-${TARGET}.embl
# The gene structure predictions of the assembly by GenomeThreader can be found in the file gth.OsjPRT-on-${SYNONYM}-${TARGET}.
##---------------------------
## To clean up files after the job is done
# cd ${TRegGA_DIR}/reads/${SYNONYM}
# make -f Makefile_GPR_${SYNONYM} cleanup
# cd ${TRegGA_DIR}/assembly/denovo/${SYNONYM}
# make -f Makefile_denovo_${SYNONYM} cleanup
# cd ${TRegGA_DIR}/assembly/rfguided/${SYNONYM}-on-${TARGET}
# make -f Makefile_RGA_${SYNONYM}-on-${TARGET} cleanup
##-----------------------------
## To clean up files for all jobs under ${TRegGA_DIR}
# cd ${TRegGA_DIR}
# find . -path "*ALG/tmp" -type d | xargs -I {} \rm -r {}
# find . -path "*GF/alignoutput" -type d | xargs -I {} \rm -r {}
# find . -path "*GF/reads" -type d | xargs -I {} \rm -r {}

" > TRegGA_${SYNONYM}-on-${TARGET}.sh


